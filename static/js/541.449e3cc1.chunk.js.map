{"version":3,"file":"static/js/541.449e3cc1.chunk.js","mappings":"2MACA,EAA0B,0BAA1B,EAA4D,wB,kBCKtDA,GAAaC,EAAAA,EAAAA,OAAK,kBAAM,gCAyB9B,MAvBA,WACE,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,WACRD,GAAW,IACXE,EAAAA,EAAAA,MACGC,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAAiBN,EAAUM,MAChCC,QAAQL,GAAW,MACrB,IAEH,IAAQM,EAAmBC,EAAVC,EAAUD,EAE3B,OACE,iBAAKE,UAAWH,EAAhB,WACE,eAAIG,UAAWD,EAAf,+BACA,SAAC,EAAAE,SAAD,CAAUC,SAAUZ,IAAW,wCAA/B,SACGF,IAAU,SAACH,EAAD,CAAYG,OAAQA,W,6LCxBjCe,EAAS,4CACTC,EAAW,+BAAjB,SAEeC,EAAU,GAAVA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAyBC,GAAzB,uFACoBC,MAAMD,GAD1B,YACQE,EADR,QAEaC,GAFb,gCAGYD,EAAIE,OAHhB,+CAIMC,QAAQC,OAAO,IAAIC,MAAMC,EAAAA,GAAAA,MAAA,kBAJ/B,0GAOO,SAASrB,IACd,OAAOY,EAAU,OAAD,OACdD,EADc,4BACcD,IAGzB,SAASY,EAAkBC,GAChC,OAAOX,EAAU,GAAD,OAAID,EAAJ,wBAA4BD,EAA5B,kBAA4Ca,IAGvD,SAASC,EAAgBC,GAC9B,OAAOb,EAAU,GAAD,OAAID,EAAJ,kBAAsBc,GAAtB,OAAgCf,IAG3C,SAASgB,EAAeD,GAC7B,OAAOb,EAAU,GAAD,OAAID,EAAJ,kBAAsBc,EAAtB,mBAAwCf,IAGnD,SAASiB,EAAkBF,GAChC,OAAOb,EAAU,OAAD,OACdD,EADc,kBACIc,EADJ,mBACsBf,EADtB","sources":["webpack://goit-react-hw-05-movies1/./src/pages/HomePage/HomePage.module.css?5baa","pages/HomePage/HomePage.js","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"HomePage_section__bINJC\",\"title\":\"HomePage_title__UFLA3\"};","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { lazy, Suspense } from 'react';\nimport s from './HomePage.module.css';\nimport { fetchTrendingMovies } from '../../services/api';\n\nconst MoviesList = lazy(() => import('../../components/MoviesList/MoviesList'));\n\nfunction HomePage() {\n  const [movies, setMovies] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    fetchTrendingMovies()\n      .then(({ results }) => setMovies(results))\n      .finally(setLoading(false));\n  }, []);\n\n  const { section, title } = s;\n\n  return (\n    <div className={section}>\n      <h1 className={title}> Trending today </h1>\n      <Suspense fallback={loading && <div>Loading...</div>}>\n        {movies && <MoviesList movies={movies} />}\n      </Suspense>\n    </div>\n  );\n}\n\nexport default HomePage;\n","import { toast } from 'react-toastify';\nconst APIkey = '?api_key=0acbef793912116e8168b05c9b24e1e7';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nasync function fetchData(url) {\n  const res = await fetch(url);\n  return res.ok\n    ? await res.json()\n    : Promise.reject(new Error(toast.error(`not found :(`)));\n}\n\nexport function fetchTrendingMovies() {\n  return fetchData(`\n  ${BASE_URL}/trending/all/day${APIkey}`);\n}\n\nexport function fetchSearchMovies(searchQuery) {\n  return fetchData(`${BASE_URL}/search/movie${APIkey}&query=${searchQuery}`);\n}\n\nexport function fetchMoviesByID(movieID) {\n  return fetchData(`${BASE_URL}/movie/${movieID}${APIkey}`);\n}\n\nexport function fetchMovieCast(movieID) {\n  return fetchData(`${BASE_URL}/movie/${movieID}/credits${APIkey}`);\n}\n\nexport function fetchMovieReviews(movieID) {\n  return fetchData(`\n  ${BASE_URL}/movie/${movieID}/reviews${APIkey}&page=1`);\n}\n"],"names":["MoviesList","lazy","useState","movies","setMovies","loading","setLoading","useEffect","fetchTrendingMovies","then","results","finally","section","s","title","className","Suspense","fallback","APIkey","BASE_URL","fetchData","url","fetch","res","ok","json","Promise","reject","Error","toast","fetchSearchMovies","searchQuery","fetchMoviesByID","movieID","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}