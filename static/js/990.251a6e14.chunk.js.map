{"version":3,"file":"static/js/990.251a6e14.chunk.js","mappings":"oNACA,EAA0B,4B,SCIpBA,GAAaC,EAAAA,EAAAA,OAAK,kBAAM,gCACxBC,GAAaD,EAAAA,EAAAA,OAAK,kBAAM,gCAyB9B,EAvBmB,WACjB,OAAsCE,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,MAArC,eAAOG,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WACRJ,IACEK,EAAAA,EAAAA,IAAkBL,GAAaM,MAAK,SAACC,GAAD,OAASJ,EAAUI,EAAIC,cAC5D,CAACR,IAMJ,OACE,iBAAKS,UAAWC,EAAhB,WACE,SAACd,EAAD,CAAYe,SANU,SAACC,GACzBX,EAAeW,OAMb,SAAC,EAAAC,SAAD,CAAUC,UAAU,wCAApB,SACGZ,IAAU,SAACJ,EAAD,CAAYI,OAAQA,W,6LCxBjCa,EAAS,4CACTC,EAAW,+BAAjB,SAEeC,EAAU,GAAVA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAyBC,GAAzB,uFACoBC,MAAMD,GAD1B,YACQX,EADR,QAEaa,GAFb,gCAGYb,EAAIc,OAHhB,+CAIMC,QAAQC,OAAO,IAAIC,MAAMC,EAAAA,GAAAA,MAAA,kBAJ/B,0GAOO,SAASC,IACd,OAAOT,EAAU,OAAD,OACdD,EADc,4BACcD,IAGzB,SAASV,EAAkBL,GAChC,OAAOiB,EAAU,GAAD,OAAID,EAAJ,wBAA4BD,EAA5B,kBAA4Cf,IAGvD,SAAS2B,EAAgBC,GAC9B,OAAOX,EAAU,GAAD,OAAID,EAAJ,kBAAsBY,GAAtB,OAAgCb,IAG3C,SAASc,EAAeD,GAC7B,OAAOX,EAAU,GAAD,OAAID,EAAJ,kBAAsBY,EAAtB,mBAAwCb,IAGnD,SAASe,EAAkBF,GAChC,OAAOX,EAAU,OAAD,OACdD,EADc,kBACIY,EADJ,mBACsBb,EADtB","sources":["webpack://goit-react-hw-05-movies1/./src/pages/MoviesPage/MoviesPage.module.css?7ea7","pages/MoviesPage/MoviesPage.js","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"MoviesPage_section__w0FQD\"};","import React, { useState, useEffect } from \"react\";\nimport { lazy, Suspense } from \"react\";\nimport { fetchSearchMovies } from \"../../services/api\";\nimport s from \"./MoviesPage.module.css\";\n\nconst SearchForm = lazy(() => import(\"../../components/SearchForm/SearchForm\"));\nconst MoviesList = lazy(() => import(\"../../components/MoviesList/MoviesList\"));\n\nconst MoviesPage = () => {\n  const [searchQuery, setSearchQuery] = useState(null);\n  const [movies, setMovies] = useState(null);\n\n  useEffect(() => {\n    searchQuery &&\n      fetchSearchMovies(searchQuery).then((res) => setMovies(res.results));\n  }, [searchQuery]);\n\n  const handleChangeQuery = (query) => {\n    setSearchQuery(query);\n  };\n\n  return (\n    <div className={s.section}>\n      <SearchForm onSubmit={handleChangeQuery} />\n      <Suspense fallback={<div>Loading...</div>}>\n        {movies && <MoviesList movies={movies} />}\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MoviesPage;\n","import { toast } from 'react-toastify';\nconst APIkey = '?api_key=0acbef793912116e8168b05c9b24e1e7';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nasync function fetchData(url) {\n  const res = await fetch(url);\n  return res.ok\n    ? await res.json()\n    : Promise.reject(new Error(toast.error(`not found :(`)));\n}\n\nexport function fetchTrendingMovies() {\n  return fetchData(`\n  ${BASE_URL}/trending/all/day${APIkey}`);\n}\n\nexport function fetchSearchMovies(searchQuery) {\n  return fetchData(`${BASE_URL}/search/movie${APIkey}&query=${searchQuery}`);\n}\n\nexport function fetchMoviesByID(movieID) {\n  return fetchData(`${BASE_URL}/movie/${movieID}${APIkey}`);\n}\n\nexport function fetchMovieCast(movieID) {\n  return fetchData(`${BASE_URL}/movie/${movieID}/credits${APIkey}`);\n}\n\nexport function fetchMovieReviews(movieID) {\n  return fetchData(`\n  ${BASE_URL}/movie/${movieID}/reviews${APIkey}&page=1`);\n}\n"],"names":["SearchForm","lazy","MoviesList","useState","searchQuery","setSearchQuery","movies","setMovies","useEffect","fetchSearchMovies","then","res","results","className","s","onSubmit","query","Suspense","fallback","APIkey","BASE_URL","fetchData","url","fetch","ok","json","Promise","reject","Error","toast","fetchTrendingMovies","fetchMoviesByID","movieID","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}